@using SecretSanta.Models
@model SecretSanta.Models.SantaUserPostModel

@{
    ViewBag.Title = $"{Resources.Global.SiteName} - {Resources.Global.User_Edit_Title}";
}

<h2>@Resources.Global.User_Edit_Title</h2>

<p class="panel panel-warning">@Resources.Global.User_Edit_Warning</p>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    foreach (var lambda in ModelHelper.SelectProperties<SantaUserPostModel>(m => m.DisplayName, m => m.Email, m => m.FacebookProfileUrl, m => m.FullName, m => m.AddressLine1, m => m.AddressLine2, m => m.PostalCode, m => m.City))
    {
        <div class="form-group">
            @Html.ValidationMessageFor(lambda)
            @Html.LabelFor(lambda)
            @Html.EditorFor(lambda, new { htmlAttributes = new { @class = "form-control" } })
            @Html.HelpTextFor(lambda)
        </div>
    }
    @* At this moment I have no idea how to create the above pattern for "any" property type. I don't think it's doable really *@
    <div class="form-group">
        @Html.ValidationMessageFor(m => m.Country)
        @Html.LabelFor(m => m.Country)
        @Html.EditorFor(m => m.Country)
        @Html.HelpTextFor(m => m.Country)
    </div>
    <div class="form-group">
        @Html.ValidationMessageFor(m => m.SendAbroad)
        @Html.EditorFor(m => m.SendAbroad)
        @Html.LabelFor(m => m.SendAbroad)
        @Html.HelpTextFor(m => m.SendAbroad)
    </div>
    <div class="form-group">
        @Html.ValidationMessageFor(m => m.Note)
        @Html.LabelFor(m => m.Note)
        @Html.EditorFor(m => m.Note, new { htmlAttributes = new { @class = "form-control" } })
        @Html.HelpTextFor(m => m.Note)
    </div>
    <button type="submit" class="btn btn-primary">@Resources.Global.Button_Submit</button>
}
