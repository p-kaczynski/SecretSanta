@using SecretSanta.Models
@model SecretSanta.Models.RegistrationPostModel

@{
    ViewBag.Title = $"{Resources.Global.SiteName} - {Resources.Global.Registration}";
    var privacyLink = Html.ActionLink(Resources.Global.PrivacyPolicy, "Index", "Privacy", null, new {target = "_blank"});
    var rulesLink = Html.ActionLink(Resources.Global.Rules, "Rules", "Home", null, new {target = "_blank"});
}

<h2>@Resources.Global.Registration</h2>

@if (!ViewData.ModelState.IsValid && ViewData.ModelState.Keys.Contains(Constants.GlobalModerError))
            {
    <div class="alert alert-danger" role="alert">
        @Html.ValidationMessage(Constants.GlobalModerError)
    </div>
}

<p class="text-info">@Resources.Global.Registration_FieldsWithAsterisk</p>

@using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
    foreach(var lambda in ModelHelper.SelectProperties<RegistrationPostModel>(m => m.DisplayName, m => m.Email, m=>m.FacebookProfileUrl, m => m.Password, m=>m.RepeatPassword, m => m.FullName, m => m.AddressLine1, m => m.AddressLine2, m => m.PostalCode, m => m.City))
            {
        <div class="form-group">
            @Html.ValidationMessageFor(lambda)
            @Html.LabelFor(lambda)
            @Html.EditorFor(lambda, new{ htmlAttributes = new { @class = "form-control" } })
            @Html.HelpTextFor(lambda)
        </div>
    }
    @* At this moment I have no idea how to create the above pattern for "any" property type. I don't think it's doable really *@
    <div class="form-group">
        @Html.ValidationMessageFor(m => m.Country)
        @Html.LabelFor(m => m.Country)
        @Html.EditorFor(m => m.Country)
        @Html.HelpTextFor(m=>m.Country)
    </div>
    <div class="form-group">
        @Html.ValidationMessageFor(m => m.SendAbroad)
        @Html.EditorFor(m => m.SendAbroad)
        @Html.LabelFor(m => m.SendAbroad)
        @Html.HelpTextFor(m => m.SendAbroad)
    </div>
    <div class="form-group">
        @Html.ValidationMessageFor(m => m.Note)
        @Html.LabelFor(m => m.Note)
        @Html.EditorFor(m => m.Note, new { htmlAttributes = new { @class = "form-control" } })
        @Html.HelpTextFor(m => m.Note)
    </div>
    <div class="form-group">
        @Html.ValidationMessageFor(m => m.DataProtectionPolicyAgreement)
        @Html.EditorFor(m => m.DataProtectionPolicyAgreement)
        @Html.LabelFor(m => m.DataProtectionPolicyAgreement)
        <p class="form-text text-muted">@Html.Raw(string.Format(Resources.Global.Registration_Form_Agreement_HelpText, privacyLink, rulesLink))</p>
    </div>
    <button type="submit" class="btn btn-primary">@Resources.Global.Button_Submit</button>

}
